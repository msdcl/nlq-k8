apiVersion: apps/v1
kind: Deployment
metadata:
  name: nlq-backend
  namespace: nlq-system
  labels:
    app: nlq-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nlq-backend
  template:
    metadata:
      labels:
        app: nlq-backend
    spec:
      initContainers:
      - name: wait-for-postgres
        image: postgres:15-alpine
        command: ['sh', '-c', 'until pg_isready -h postgres-service -p 5432 -U nlq_user; do echo waiting for postgres; sleep 2; done;']
        env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: nlq-secrets
              key: DB_PASSWORD
      containers:
      - name: nlq-backend
        image: 481665127661.dkr.ecr.ap-south-1.amazonaws.com/nlq-backend:latest
        ports:
        - containerPort: 3001
        envFrom:
        - configMapRef:
            name: nlq-config
        - secretRef:
            name: nlq-secrets
        volumeMounts:
        - name: app-storage
          mountPath: /app/logs
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
      volumes:
      - name: app-storage
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: nlq-backend-service
  namespace: nlq-system
spec:
  selector:
    app: nlq-backend
  ports:
  - port: 3001
    targetPort: 3001
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nlq-backend-hpa
  namespace: nlq-system
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nlq-backend
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
      selectPolicy: Min
